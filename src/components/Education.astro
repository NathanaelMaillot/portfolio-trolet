---
import { siteConfig } from "../config";

const baseUrl = (() => {
  const envBase = import.meta.env.BASE_URL;
  if (envBase) {
    return envBase.endsWith("/") ? envBase : `${envBase}/`;
  }

  if (typeof Astro !== "undefined" && Astro.site) {
    const pathName = Astro.site.pathname;
    return pathName.endsWith("/") ? pathName : `${pathName}/`;
  }

  return "/";
})();

const normalizeLogo = (logo?: string) => {
  if (!logo) return undefined;
  const sanitized = logo.replace(/^\/+/, "");
  return `${baseUrl}${sanitized}`;
};

const education = siteConfig.education?.map((edu) => ({
  ...edu,
  logoUrl: normalizeLogo(edu.logo),
}));

const hasEducation = education && education.length > 0;
---

{
  hasEducation && (
    <section
      id="education"
      class="p-8 sm:p-12 md:p-16 lg:p-24"
      style={`--accent-color: ${siteConfig.accentColor}; --accent-color-light: #3b82f6; --accent-color-dark: #1e40af;`}
    >
      <div class="space-y-12">
        <div class="max-w-3xl">
          <h2 class="text-3xl sm:text-4xl md:text-5xl xl:text-7xl font-bold text-gray-900">
            Education
          </h2>
          <div
            class="w-[75px] h-[5px] mt-2 rounded-full"
            style={`background-color: ${siteConfig.accentColor}`}
          />
        </div>

        <div class="space-y-8">
          {education?.map((edu) => (
            <article
              class="group relative flex flex-col gap-4 overflow-hidden rounded-3xl border border-slate-200 bg-white/80 p-5 sm:p-6 md:p-8 shadow-sm transition-all duration-300 hover:-translate-y-1 hover:border-[var(--accent-color)]/60 hover:shadow-xl"
            >
              <div class="flex flex-col sm:flex-row sm:items-start sm:justify-between gap-4">
                <div class="flex items-start gap-4">
                  {edu.logoUrl && (
                    <img
                      src={edu.logoUrl}
                      alt={`${edu.school} logo`}
                      class="h-12 w-12 flex-shrink-0 object-contain"
                    />
                  )}
                  <div>
                    <h3 class="text-lg sm:text-xl font-semibold text-gray-900">
                      {edu.degree}
                    </h3>
                    <p
                      class="text-base sm:text-lg"
                      style={`color: ${siteConfig.accentColor}`}
                    >
                      {edu.school}
                    </p>
                  </div>
                </div>
                <span class="text-xs sm:text-sm text-gray-500">
                  {edu.dateRange}
                </span>
              </div>

              <ul class="space-y-2 text-left">
                {edu.achievements.map((achievement) => (
                  <li class="flex items-start gap-3 text-sm sm:text-base text-gray-600 transition-all duration-300 group-hover:text-gray-700">
                    <span class="mt-1.5 inline-flex h-2 w-2 flex-shrink-0 rounded-full bg-[var(--accent-color)] transition-transform duration-300 group-hover:scale-110" />
                    <span>{achievement}</span>
                  </li>
                ))}
              </ul>
            </article>
          ))}
        </div>
      </div>
    </section>
  )
}
