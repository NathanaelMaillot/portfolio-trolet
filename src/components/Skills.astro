---
import { siteConfig } from "../config";
import {
  Cpu as CpuIcon,
  Code2 as Code2Icon,
  TrendingUp as TrendingUpIcon,
  BadgeCheck as BadgeCheckIcon,
} from "lucide-astro";

const iconComponents = {
  cpu: CpuIcon,
  "code-2": Code2Icon,
  "trending-up": TrendingUpIcon,
  "badge-check": BadgeCheckIcon,
};

const hasSkills = siteConfig.skills && siteConfig.skills.length > 0;
---

{
  hasSkills && (
    <section
      id="skills"
      class="p-8 sm:p-12 md:p-16 lg:p-24 bg-gradient-to-b from-white to-gray-50"
      style={`--accent-color: ${siteConfig.accentColor}`}
    >
      <div class="w-full">
        <div class="max-w-3xl">
          <h2 class="text-3xl sm:text-4xl md:text-5xl xl:text-6xl font-bold text-gray-900">
            Core Competencies
          </h2>
          <div
            class="w-[75px] h-[5px] mt-2 rounded-full"
            style={`background-color: ${siteConfig.accentColor}`}
          />
        </div>

        <div class="mt-12 grid gap-8 sm:gap-10 md:grid-cols-2 xl:grid-cols-4">
          {
            siteConfig.skills.map((pillar) => {
              const id = pillar.title.toLowerCase().replace(/[^a-z0-9]+/g, "-");
              const IconComponent = iconComponents[pillar.icon] ?? CpuIcon;

              return (
                <article
                  id={id}
                  aria-labelledby={`${id}-title`}
                  class="group relative flex h-full flex-col items-center justify-center gap-6 overflow-hidden rounded-3xl border border-slate-200 bg-white/80 p-8 text-center shadow-sm transition-all duration-300 hover:-translate-y-1 hover:border-[var(--accent-color)]/50 hover:shadow-xl"
                >
                  <header class="flex flex-col items-center gap-4">
                    <div class="flex h-12 w-12 items-center justify-center rounded-full bg-[var(--accent-color)]/12 text-[var(--accent-color)]">
                      <IconComponent class="h-6 w-6" />
                    </div>
                    <h3
                      id={`${id}-title`}
                      class="text-lg sm:text-xl font-semibold text-slate-900"
                    >
                      {pillar.title}
                    </h3>
                  </header>

                  <div class="relative flex w-full min-h-[160px] flex-1 items-center justify-center">
                    <p class="max-w-xs text-sm leading-relaxed text-slate-600 transition-all duration-300 ease-out group-hover:-translate-y-2 group-hover:opacity-0">
                      {pillar.description}
                    </p>
                    <ul class="pointer-events-none absolute inset-0 flex w-full flex-col items-start justify-center gap-3 text-left text-sm font-small text-slate-700 opacity-0 transition-all duration-300 ease-out group-hover:pointer-events-auto group-hover:translate-y-0 group-hover:opacity-100">
                      {pillar.skills.map((skill) => (
                        <li class="flex w-full items-center gap-2">
                          <span class="h-2.5 w-2.5 rounded-full bg-[var(--accent-color)]" />
                          <span>{skill}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                </article>
              );
            })
          }
        </div>
      </div>
    </section>
  )
}
