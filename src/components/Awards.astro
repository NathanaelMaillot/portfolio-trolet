---
import { siteConfig } from "../config";
const hasAwards = siteConfig.awardsAndCompetitions && siteConfig.awardsAndCompetitions.length > 0;
---
{hasAwards && (
  <section
    id="awards"
    class="p-8 sm:p-12 md:p-16 lg:p-24"
    style={`--accent-color: ${siteConfig.accentColor}; --accent-color-light: #3b82f6; --accent-color-dark: #1e40af;`}
  >
      <div class="space-y-12">
        <div class="max-w-3xl">
          <h2 class="text-3xl sm:text-4xl md:text-5xl xl:text-7xl font-bold text-gray-900">Awards &amp; Competitions</h2>
          <div
            class="w-[75px] h-[5px] mt-2 mb-6 rounded-full"
            style="background-color: var(--accent-color)"
          />
        </div>
        <div>
          <div
            class="relative"
            data-awards-carousel
          >
            <div class="pointer-events-none absolute inset-y-4 left-0 w-28 bg-gradient-to-r from-white via-white/60 to-transparent hidden sm:block"></div>
            <div class="pointer-events-none absolute inset-y-4 right-0 w-28 bg-gradient-to-l from-white via-white/60 to-transparent hidden sm:block"></div>
            <div
              class="[&::-webkit-scrollbar]:hidden [scrollbar-width:none] overflow-hidden"
            >
              <div
                class="flex gap-6 md:gap-8 overflow-x-auto scroll-smooth snap-x snap-mandatory pb-8"
                data-awards-track
              >
                {siteConfig.awardsAndCompetitions.map((award) => (
                  <article
                    class="group relative flex min-h-full flex-col gap-4 overflow-hidden rounded-3xl border border-slate-200 bg-white/80 p-5 sm:p-6 md:p-8 shadow-sm transition-all duration-300 hover:-translate-y-1 hover:border-[var(--accent-color)]/60 hover:shadow-xl snap-start shrink-0 basis-full sm:basis-[70%] md:basis-[55%] lg:basis-[45%] xl:basis-[33%]"
                  >
                    <div class="flex flex-col sm:flex-row sm:items-start sm:justify-between gap-3">
                      <div>
                        <h3 class="text-lg sm:text-xl font-semibold text-gray-900">
                          {award.title}
                        </h3>
                        <p class="text-base sm:text-lg" style="color: var(--accent-color)">
                          {award.awardedBy}
                        </p>
                      </div>
                      <span class="text-xs sm:text-sm text-gray-500 mt-0.5 sm:mt-0">
                        {award.year}
                      </span>
                    </div>
                    <p class="text-sm sm:text-base text-gray-600 transition-colors duration-300 group-hover:text-gray-700">
                      {award.description}
                    </p>
                  </article>
                ))}
              </div>
            </div>
            <button
              type="button"
              class="group absolute left-4 top-1/2 hidden h-[70%] w-20 -translate-y-1/2 items-center justify-start rounded-3xl border border-transparent bg-white/50 pl-4 pr-6 text-gray-700 shadow-xl shadow-black/5 ring-1 ring-black/5 backdrop-blur transition-all duration-300 hover:-translate-x-1 hover:bg-white/80 hover:text-[var(--accent-color)] focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[var(--accent-color)] sm:flex disabled:pointer-events-none disabled:opacity-40"
              aria-label="Previous award"
              data-awards-prev
            >
              <span class="flex h-10 w-10 items-center justify-center rounded-2xl bg-white/80 text-current shadow-md shadow-black/5 transition-transform duration-300 group-hover:-translate-x-1">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="1.6"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="h-5 w-5"
                >
                  <path d="m15 18-6-6 6-6" />
                </svg>
              </span>
            </button>
            <button
              type="button"
              class="group absolute right-4 top-1/2 hidden h-[70%] w-20 -translate-y-1/2 items-center justify-end rounded-3xl border border-transparent bg-white/50 pl-6 pr-4 text-gray-700 shadow-xl shadow-black/5 ring-1 ring-black/5 backdrop-blur transition-all duration-300 hover:translate-x-1 hover:bg-white/80 hover:text-[var(--accent-color)] focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[var(--accent-color)] sm:flex disabled:pointer-events-none disabled:opacity-40"
              aria-label="Next award"
              data-awards-next
            >
              <span class="flex h-10 w-10 items-center justify-center rounded-2xl bg-white/80 text-current shadow-md shadow-black/5 transition-transform duration-300 group-hover:translate-x-1">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="1.6"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="h-5 w-5"
                >
                  <path d="m9 18 6-6-6-6" />
                </svg>
              </span>
            </button>
            <div class="mt-6 flex flex-col gap-4 sm:mt-8 sm:flex-row sm:items-center sm:justify-between">
              <div class="flex items-center justify-between gap-4 sm:order-2 sm:justify-end">
                <button
                  type="button"
                  class="group flex h-11 w-11 items-center justify-center rounded-2xl border border-slate-200/80 bg-white/80 text-gray-700 shadow-sm shadow-black/5 transition-all duration-300 hover:-translate-x-0.5 hover:border-[var(--accent-color)]/40 hover:text-[var(--accent-color)] focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[var(--accent-color)] sm:hidden disabled:pointer-events-none disabled:opacity-40"
                  aria-label="Previous award"
                  data-awards-prev-mobile
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="1.6"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    class="h-5 w-5"
                  >
                    <path d="m15 18-6-6 6-6" />
                  </svg>
                </button>
                <div class="text-sm font-medium uppercase tracking-[0.2em] text-slate-400">
                  Scroll to explore
                </div>
                <button
                  type="button"
                  class="group flex h-11 w-11 items-center justify-center rounded-2xl border border-slate-200/80 bg-white/80 text-gray-700 shadow-sm shadow-black/5 transition-all duration-300 hover:translate-x-0.5 hover:border-[var(--accent-color)]/40 hover:text-[var(--accent-color)] focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[var(--accent-color)] sm:hidden disabled:pointer-events-none disabled:opacity-40"
                  aria-label="Next award"
                  data-awards-next-mobile
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="1.6"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    class="h-5 w-5"
                  >
                    <path d="m9 18 6-6-6-6" />
                  </svg>
                </button>
              </div>
              <div class="relative h-1 w-full overflow-hidden rounded-full bg-slate-200/80 sm:order-1 sm:max-w-sm">
                <div
                  class="absolute inset-y-0 left-0 w-0 rounded-full bg-gradient-to-r from-[var(--accent-color)] to-[var(--accent-color-dark)] transition-all duration-300"
                  data-awards-progress
                ></div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
)}

<script>
  const initAwardsCarousel = () => {
    const carousels = document.querySelectorAll("[data-awards-carousel]");

    carousels.forEach((carousel) => {
      const track = carousel.querySelector("[data-awards-track]");
      const prev = carousel.querySelector("[data-awards-prev]");
      const next = carousel.querySelector("[data-awards-next]");
      const prevMobile = carousel.querySelector("[data-awards-prev-mobile]");
      const nextMobile = carousel.querySelector("[data-awards-next-mobile]");
      const progress = carousel.querySelector("[data-awards-progress]");
      if (!track || !prev || !next) return;

      const slides = Array.from(track.children);
      if (slides.length <= 1) {
        prev.style.display = "none";
        next.style.display = "none";
        if (prevMobile) prevMobile.style.display = "none";
        if (nextMobile) nextMobile.style.display = "none";
        if (progress) {
          progress.style.width = "100%";
        }
      }

      const getStep = () => {
        if (slides.length > 1) {
          return slides[1].offsetLeft - slides[0].offsetLeft;
        }
        const first = slides[0];
        return first ? first.getBoundingClientRect().width : track.clientWidth;
      };

      const updateButtons = () => {
        const maxScrollLeft = track.scrollWidth - track.clientWidth;
        const tolerance = 8;
        prev.disabled = track.scrollLeft <= tolerance;
        next.disabled = track.scrollLeft >= maxScrollLeft - tolerance;
        if (prevMobile) prevMobile.disabled = prev.disabled;
        if (nextMobile) nextMobile.disabled = next.disabled;
      };

      const scrollByStep = (direction) => {
        const step = getStep();
        const maxScrollLeft = track.scrollWidth - track.clientWidth;
        const target = track.scrollLeft + step * direction;
        track.scrollTo({
          left: Math.max(0, Math.min(target, maxScrollLeft)),
          behavior: "smooth",
        });
        window.requestAnimationFrame(updateButtons);
      };

      const updateProgress = () => {
        if (!progress) return;
        const maxScrollLeft = track.scrollWidth - track.clientWidth;
        if (maxScrollLeft <= 0) {
          progress.style.width = "100%";
          return;
        }
        const ratio = track.scrollLeft / maxScrollLeft;
        const percentage = Math.min(100, Math.max(0, ratio * 100));
        progress.style.width = `${percentage}%`;
      };

      prev.addEventListener("click", () => scrollByStep(-1));
      next.addEventListener("click", () => scrollByStep(1));
      if (prevMobile) prevMobile.addEventListener("click", () => scrollByStep(-1));
      if (nextMobile) nextMobile.addEventListener("click", () => scrollByStep(1));

      track.addEventListener("scroll", () => {
        window.requestAnimationFrame(updateButtons);
        window.requestAnimationFrame(updateProgress);
      });

      if (typeof ResizeObserver !== "undefined") {
        const resizeObserver = new ResizeObserver(() => {
          updateButtons();
          updateProgress();
        });
        resizeObserver.observe(track);
      } else {
        window.addEventListener("resize", updateButtons, {
          passive: true,
        });
      }

      updateButtons();
      updateProgress();
    });
  };

  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", initAwardsCarousel, {
      once: true,
    });
  } else {
    initAwardsCarousel();
  }
</script>
